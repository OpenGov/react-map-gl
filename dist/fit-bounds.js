'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = fitBounds;

var _mapboxGl = require('mapbox-gl');

var _transform = require('mapbox-gl/js/geo/transform');

var _transform2 = _interopRequireDefault(_transform);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2015 Uber Technologies, Inc.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

function fitBounds(width, height, _bounds, options) {
  var bounds = new _mapboxGl.LngLatBounds([_bounds[0].reverse(), _bounds[1].reverse()]);
  options = options || {};
  var padding = typeof options.padding === 'undefined' ? 0 : options.padding;
  var offset = _mapboxGl.Point.convert([0, 0]);
  var tr = new _transform2.default();
  tr.width = width;
  tr.height = height;
  var nw = tr.project(bounds.getNorthWest());
  var se = tr.project(bounds.getSouthEast());
  var size = se.sub(nw);
  var scaleX = (tr.width - padding * 2 - Math.abs(offset.x) * 2) / size.x;
  var scaleY = (tr.height - padding * 2 - Math.abs(offset.y) * 2) / size.y;

  var center = tr.unproject(nw.add(se).div(2));
  var zoom = tr.scaleZoom(tr.scale * Math.min(scaleX, scaleY));
  return {
    latitude: center.lat,
    longitude: center.lng,
    zoom: zoom
  };
}

// NOTE: Transform is not a public API so we should be careful to always lock
// down mapbox-gl to a specific major, minor, and patch version.
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9maXQtYm91bmRzLmpzIl0sIm5hbWVzIjpbImZpdEJvdW5kcyIsIndpZHRoIiwiaGVpZ2h0IiwiX2JvdW5kcyIsIm9wdGlvbnMiLCJib3VuZHMiLCJMbmdMYXRCb3VuZHMiLCJyZXZlcnNlIiwicGFkZGluZyIsIm9mZnNldCIsIlBvaW50IiwiY29udmVydCIsInRyIiwiVHJhbnNmb3JtIiwibnciLCJwcm9qZWN0IiwiZ2V0Tm9ydGhXZXN0Iiwic2UiLCJnZXRTb3V0aEVhc3QiLCJzaXplIiwic3ViIiwic2NhbGVYIiwiTWF0aCIsImFicyIsIngiLCJzY2FsZVkiLCJ5IiwiY2VudGVyIiwidW5wcm9qZWN0IiwiYWRkIiwiZGl2Iiwiem9vbSIsInNjYWxlWm9vbSIsInNjYWxlIiwibWluIiwibGF0aXR1ZGUiLCJsYXQiLCJsb25naXR1ZGUiLCJsbmciXSwibWFwcGluZ3MiOiI7Ozs7O2tCQTBCd0JBLFM7O0FBTnhCOztBQUlBOzs7Ozs7QUF4QkE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBUWUsU0FBU0EsU0FBVCxDQUFtQkMsS0FBbkIsRUFBMEJDLE1BQTFCLEVBQWtDQyxPQUFsQyxFQUEyQ0MsT0FBM0MsRUFBb0Q7QUFDakUsTUFBTUMsU0FBUyxJQUFJQyxzQkFBSixDQUFpQixDQUFDSCxRQUFRLENBQVIsRUFBV0ksT0FBWCxFQUFELEVBQXVCSixRQUFRLENBQVIsRUFBV0ksT0FBWCxFQUF2QixDQUFqQixDQUFmO0FBQ0FILFlBQVVBLFdBQVcsRUFBckI7QUFDQSxNQUFNSSxVQUFVLE9BQU9KLFFBQVFJLE9BQWYsS0FBMkIsV0FBM0IsR0FBeUMsQ0FBekMsR0FBNkNKLFFBQVFJLE9BQXJFO0FBQ0EsTUFBTUMsU0FBU0MsZ0JBQU1DLE9BQU4sQ0FBYyxDQUFDLENBQUQsRUFBSSxDQUFKLENBQWQsQ0FBZjtBQUNBLE1BQU1DLEtBQUssSUFBSUMsbUJBQUosRUFBWDtBQUNBRCxLQUFHWCxLQUFILEdBQVdBLEtBQVg7QUFDQVcsS0FBR1YsTUFBSCxHQUFZQSxNQUFaO0FBQ0EsTUFBTVksS0FBS0YsR0FBR0csT0FBSCxDQUFXVixPQUFPVyxZQUFQLEVBQVgsQ0FBWDtBQUNBLE1BQU1DLEtBQUtMLEdBQUdHLE9BQUgsQ0FBV1YsT0FBT2EsWUFBUCxFQUFYLENBQVg7QUFDQSxNQUFNQyxPQUFPRixHQUFHRyxHQUFILENBQU9OLEVBQVAsQ0FBYjtBQUNBLE1BQU1PLFNBQVMsQ0FBQ1QsR0FBR1gsS0FBSCxHQUFXTyxVQUFVLENBQXJCLEdBQXlCYyxLQUFLQyxHQUFMLENBQVNkLE9BQU9lLENBQWhCLElBQXFCLENBQS9DLElBQW9ETCxLQUFLSyxDQUF4RTtBQUNBLE1BQU1DLFNBQVMsQ0FBQ2IsR0FBR1YsTUFBSCxHQUFZTSxVQUFVLENBQXRCLEdBQTBCYyxLQUFLQyxHQUFMLENBQVNkLE9BQU9pQixDQUFoQixJQUFxQixDQUFoRCxJQUFxRFAsS0FBS08sQ0FBekU7O0FBRUEsTUFBTUMsU0FBU2YsR0FBR2dCLFNBQUgsQ0FBYWQsR0FBR2UsR0FBSCxDQUFPWixFQUFQLEVBQVdhLEdBQVgsQ0FBZSxDQUFmLENBQWIsQ0FBZjtBQUNBLE1BQU1DLE9BQU9uQixHQUFHb0IsU0FBSCxDQUFhcEIsR0FBR3FCLEtBQUgsR0FBV1gsS0FBS1ksR0FBTCxDQUFTYixNQUFULEVBQWlCSSxNQUFqQixDQUF4QixDQUFiO0FBQ0EsU0FBTztBQUNMVSxjQUFVUixPQUFPUyxHQURaO0FBRUxDLGVBQVdWLE9BQU9XLEdBRmI7QUFHTFA7QUFISyxHQUFQO0FBS0Q7O0FBekJEO0FBQ0EiLCJmaWxlIjoiZml0LWJvdW5kcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCB7TG5nTGF0Qm91bmRzLCBQb2ludH0gZnJvbSAnbWFwYm94LWdsJztcblxuLy8gTk9URTogVHJhbnNmb3JtIGlzIG5vdCBhIHB1YmxpYyBBUEkgc28gd2Ugc2hvdWxkIGJlIGNhcmVmdWwgdG8gYWx3YXlzIGxvY2tcbi8vIGRvd24gbWFwYm94LWdsIHRvIGEgc3BlY2lmaWMgbWFqb3IsIG1pbm9yLCBhbmQgcGF0Y2ggdmVyc2lvbi5cbmltcG9ydCBUcmFuc2Zvcm0gZnJvbSAnbWFwYm94LWdsL2pzL2dlby90cmFuc2Zvcm0nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaXRCb3VuZHMod2lkdGgsIGhlaWdodCwgX2JvdW5kcywgb3B0aW9ucykge1xuICBjb25zdCBib3VuZHMgPSBuZXcgTG5nTGF0Qm91bmRzKFtfYm91bmRzWzBdLnJldmVyc2UoKSwgX2JvdW5kc1sxXS5yZXZlcnNlKCldKTtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGNvbnN0IHBhZGRpbmcgPSB0eXBlb2Ygb3B0aW9ucy5wYWRkaW5nID09PSAndW5kZWZpbmVkJyA/IDAgOiBvcHRpb25zLnBhZGRpbmc7XG4gIGNvbnN0IG9mZnNldCA9IFBvaW50LmNvbnZlcnQoWzAsIDBdKTtcbiAgY29uc3QgdHIgPSBuZXcgVHJhbnNmb3JtKCk7XG4gIHRyLndpZHRoID0gd2lkdGg7XG4gIHRyLmhlaWdodCA9IGhlaWdodDtcbiAgY29uc3QgbncgPSB0ci5wcm9qZWN0KGJvdW5kcy5nZXROb3J0aFdlc3QoKSk7XG4gIGNvbnN0IHNlID0gdHIucHJvamVjdChib3VuZHMuZ2V0U291dGhFYXN0KCkpO1xuICBjb25zdCBzaXplID0gc2Uuc3ViKG53KTtcbiAgY29uc3Qgc2NhbGVYID0gKHRyLndpZHRoIC0gcGFkZGluZyAqIDIgLSBNYXRoLmFicyhvZmZzZXQueCkgKiAyKSAvIHNpemUueDtcbiAgY29uc3Qgc2NhbGVZID0gKHRyLmhlaWdodCAtIHBhZGRpbmcgKiAyIC0gTWF0aC5hYnMob2Zmc2V0LnkpICogMikgLyBzaXplLnk7XG5cbiAgY29uc3QgY2VudGVyID0gdHIudW5wcm9qZWN0KG53LmFkZChzZSkuZGl2KDIpKTtcbiAgY29uc3Qgem9vbSA9IHRyLnNjYWxlWm9vbSh0ci5zY2FsZSAqIE1hdGgubWluKHNjYWxlWCwgc2NhbGVZKSk7XG4gIHJldHVybiB7XG4gICAgbGF0aXR1ZGU6IGNlbnRlci5sYXQsXG4gICAgbG9uZ2l0dWRlOiBjZW50ZXIubG5nLFxuICAgIHpvb21cbiAgfTtcbn1cbiJdfQ==